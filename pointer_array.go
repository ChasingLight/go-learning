package main

import "fmt"

func main() {
	/*
		数组指针：
			首先是一个指针，指向一个数组（存储一个数组的内存地址）。
			*[4]type
		指针数组：
			首先是一个数组，存储的数据类型是 指针。
			[4]*type
	*/
	fmt.Println("------------数组指针------------------")
	// 1. 创建一个普通的数组
	arr := [4]int{1, 2, 3, 4}
	fmt.Printf("arr 的数据类型为：%T，arr 的数值为：%d，arr 的内存地址是：%p\n", arr, arr, &arr)

	// 2. 数组指针：创建一个指针，存储数组的内存地址
	var p1 *[4]int
	p1 = &arr
	fmt.Printf("p1 的数据类型为：%T，p1 的数值为：%p，p1 的内存地址是：%p\n", p1, p1, &p1)

	// 3. 根据数据指针，操作数组
	(*p1)[0] = 100
	p1[1] = 200 //简化写法
	fmt.Printf("通过数组指针-操作数组，数组的最新值为：%v\n", arr)

	fmt.Println("------------指针数组------------------")
	// 1. 声明一个 指针数组
	a := 1
	b := 2
	c := 3
	var arr2 = [3]*int{&a, &b, &c}
	fmt.Printf("指针数组 arr2 的数据类型为：%T，arr2 的数值为：%v，arr2 的内存地址是：%p\n", arr2, arr2, &arr2)

	// 2. 根据 指针，修改指向变量的数值
	*(arr2[0]) = 100
	*arr2[1] = 200 //简写

	// 3. 遍历 指针数组（打印指针指向的变量值）
	for i := range arr2 {
		fmt.Println(*arr2[i])
	}

	/*
		含义翻译练习题：
		*[5]float---数组指针：是一个 指向[5]float数组的 指针
		*[3]string---同上
		[3]*string---指针数组：是一个长度为3的数组，数组中存储的是 指向string变量的 指针
		[5]*float64---指针数组：是一个长度为5的数组，数组中存储的是 指向float64变量的 指针
		*[5]*float64---指针数组指针：是一个指向 指针数组的 指针。
	*/

}
